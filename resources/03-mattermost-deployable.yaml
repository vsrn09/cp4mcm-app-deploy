apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: postgresql-pvc-deploy-110
  namespace: mm-channel
spec:
  template:
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: postgresql-pvc
    spec:
      accessModes:
        - ReadWriteOnce
        resources:
        requests:
          storage: 20Gi
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: app
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: postgresql-deploy-110
  namespace: mm-channel
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
      labels:
        app: postgresql
        release: postgresql
      name: postgresql-db
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: postgresql
          release: postgresql
      metadata:
         labels:
            app: postgresql
            release: postgresql
      strategy:
        rollingUpdate:
          maxSurge: 100%
          maxUnavailable: 0
        type: RollingUpdate
      template:
        metadata:
         labels:
            app: postgresql
            release: postgresql
        spec:
          containers:
          - image: docker.io/centos/postgresql-10-centos7
            imagePullPolicy: IfNotPresent
            env:
              - name: PGDATA
                value: /var/lib/postgresql/data/pgdata
              - name: POSTGRESQL_USER
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-user
                    - name: POSTGRESQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-password
              - name: POSTGRESQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: database-name
            livenessProbe:
              exec:
                command:
                  - /usr/libexec/check-container
                  - '--live'
              initialDelaySeconds: 120
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
            exec:
                command:
                  - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            resources:
              limits:
                memory: 128Mi
                cpu: 500m
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            name: postgresql
            ports:
              - containerPort: 5432
                protocol: TCP
                name: service
            volumeMounts:
              - name: postgresql-data
              mountPath: /var/lib/postgresql/data
                readOnly: false
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          serviceAccount: mattermost
          serviceAccountName: mattermost
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: postgresql-data
              persistentVolumeClaim:
                claimName: postgresql-pvc
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
  apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: postgresql-secret-110
  generateName: postgresql-secret-
  namespace: mm-channel
spec:
  template:
    apiVersion: v1
    kind: Secret
    data:
      database-name: bWF0dGVybW9zdA==
      database-password: bW9zdGVzdA==
      database-user: bW11c2Vy
    metadata:
      labels:
        app: postgresql
        release: postgresql
      name: postgresql
      type: Opaque
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-service-account-110
  generateName: mattermost-service-account-
  namespace: mm-channel
spec:
  template:
    apiVersion: v1
    kind: ServiceAccount
metadata:
  name: mattermost
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-cluster-role-110
  generateName: mattermost-cluster-role-
  namespace: mm-channel
spec:
  template:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: mattermost
    rules:
    - apiGroups:
      - '*'
      resources:
      - '*'
      verbs:
      - '*'
    - nonResourceURLs:
      - '*'
      verbs:
      - '*'
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-cluster-role-binding-110
  generateName: mattermost-cluster-role-binding-
  namespace: mm-channel
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: mattermost
    subjects:
    - kind: ServiceAccount
      name: mattermost
      namespace: mm-app
    roleRef:
      kind: ClusterRole
      name: mattermost
      apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: app
    application: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-deploy
  namespace: mm-channel
spec:
template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
      labels:
        app: mattermost
        release: mattermost
      name: mattermost-app-deployment
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: mattermost
          release: mattermost
      strategy:
        rollingUpdate:
          maxSurge: 100%
          maxUnavailable: 0
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: mattermost
            release: mattermost
          name: mattermost
        spec:
          containers:
         # - image: registry.centos.org/mattermost/mattermost-team:5.2-PCP
          - image: docker.io/mattermost/mattermost-enterprise-edition
            imagePullPolicy: IfNotPresent
            env:
              - name: MM_SQLSETTINGS_DRIVERNAME
              - name: DB_PORT_NUMBER
                valueFrom:
                  configMapKeyRef:
                    name: mattermost
                    key: database-port
              - name: MM_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: postgresql-mattermost
                    key: database-user
              - name: MM_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql-mattermost
                    key: database-password
              - name: MM_DBNAME
                valueFrom:
                  secretKeyRef:
                    name: postgresql-mattermost
                    key: database-name
              - name: MM_SQLSETTINGS_DATASOURCE
                value: postgres://$(MM_USERNAME):$(MM_PASSWORD)@$(DB_HOST):$(DB_
PORT_NUMBER)/$(MM_DBNAME)?sslmode=disable&connect_timeout=10
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: service
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 1
            name: mattermost-app
            ports:
            - containerPort: 8065
              name: service
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: service
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 250m
                memory: 128Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /root/.mattermost/
              name: mattermost-config-dir
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          serviceAccount: mattermost
          serviceAccountName: mattermost
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: mattermost-config-dir
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-configmap-app-110
  namespace: mm-channel
  generateName: mattermost-configmap-app
spec:
  template:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: mattermost
      labels:
        app: mattermost
        release: mattermost
    data:
      database-host: postgresql-svc
      database-name: mattermost
      database-port: '5432'
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: postgresql-mattermost-secret-110
  generateName: postgresql-mattermost-secret-
  namespace: mm-channel
spec:
  template:
    apiVersion: v1
    kind: Secret
    data:
      database-name: bWF0dGVybW9zdA==
      database-password: bW9zdGVzdA==
      database-user: bW11c2Vy
    metadata:
      labels:
        app: postgresql
        release: postgresql
      name: postgresql-mattermost
    type: Opaque
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-service-110
  namespace: mm-channel
  generateName: mattermost-service
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: mattermost
        release: mattermost
      name: mattermost-svc
    spec:
      externalTrafficPolicy: Cluster
      ports:
      - name: service
        nodePort: 31618
        port: 8065
        protocol: TCP
        targetPort: 8065
      selector:
        app: mattermost
        release: mattermost
      sessionAffinity: None
      type: NodePort
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: mattermost-route-110
  namespace: mm-channel
spec:
  template:
    kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: mattermost-route
      labels:
        app: mattermost
      annotations:
        openshift.io/host.generated: 'true'
    spec:
      to:
        kind: Service
        name: mattermost-svc
        weight: 100
      port:
        targetPort: 8065
      wildcardPolicy: None
---
apiVersion: apps.open-cluster-management.io/v1
kind: Deployable
metadata:
  labels:
    package: config
    app: mattermost-app
  annotations:
    apps.open-cluster-management.io/is-local-deployable: "false"
    apps.open-cluster-management.io/deployable-version: "1.0.0"
    apps.open-cluster-management.io/channel: mm-channel
    apps.open-cluster-management.io/channel-type: Namespace
    apps.open-cluster-management.io/deployables: "true"
  name: postgresql-service-110
  namespace: mm-channel
  generateName: postgresql-service
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: postgresql
        release: postgresql
      name: postgresql-svc
    spec:
      ports:
      - name: service
        port: 5432
        protocol: TCP
        targetPort: 5432
        selector:
        app: postgresql
        release: postgresql
      sessionAffinity: None
      type: ClusterIP


                value: postgres
              - name: DB_HOST
                valueFrom:
                  configMapKeyRef:
                    name: mattermost
                    key: database-host
